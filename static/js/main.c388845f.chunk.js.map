{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c388845f.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nconst Button = ({ color, text , onClick}) => {\r\n\r\n    return (\r\n        <button\r\n        onClick={onClick}\r\n        style={{ backgroundColor: color}}\r\n        className='btn'>\r\n            {text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title,onAdd,showAdd }) => {\r\n    return (\r\n       <header className='header'>\r\n           <h1>{title}</h1>\r\n           <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'}\r\n            onClick={onAdd}/>\r\n\r\n       </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Manager',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa'\r\nconst Task = ({ task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} \r\n            <FaTimes \r\n            style={{ color:'red' , cursor:'pointer'}}\r\n             onClick={() => onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\nconst Tasks = ({ tasks, onDelete, onToggle}) => {\r\n    \r\n    return  (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n            ) )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\nconst AddTask = ({ onAdd}) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        onAdd({text,day,reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n     return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task'\r\n                 value={text}\r\n                 onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day'\r\n                value={day}\r\n                onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox'\r\n                checked={reminder} \r\n                value={reminder}\r\n                onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\nimport { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n        id : 1,\n        text : 'Appointment',\n        day: 'Feb 5 2021',\n        reminder: true,\n    },\n    {\n        id : 2,\n        text : 'Birthday',\n        day: 'March 1 2021',\n        reminder: true,\n    },\n    {\n        id : 3,\n        text : 'Party',\n        day: 'March 10 2021',\n        reminder: false,\n    }\n\n])\n//add task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random()*1000) + 1\n  const newTask = { id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n//DElete task\n const deleteTask = (id) => {\n   setTasks(tasks.filter((task)=> task.id !==id))\n }\n\n //toggle reminder\n const toggleReminder = (id) => {\n  setTasks(tasks.map((task)=> task.id ===id  ? { ...task, reminder: !task.reminder } : task))\n }\n\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() =>setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>} \n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No task to show'}\n    </div>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}